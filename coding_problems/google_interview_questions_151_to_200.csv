id,question,tc1,tc2,tc3,tc4,tc5,company,difficulty,category,hint
151,Reverse Words in a String,"s='the sky is blue', output='blue is sky the'","s='  hello world  ', output='world hello'","s='a', output='a'","s='  a  b  ', output='b a'","s='hi!', output='hi!'","Google, Amazon","Medium","String","Split the string, reverse words, and join with single spaces."
152,Maximum Product Subarray,"nums=[2,3,-2,4], output=6","nums=[-2,0,-1], output=0","nums=[1], output=1","nums=[-2,-3], output=6","nums=[2,3,-2], output=6","Google, Amazon","Medium","Array, Dynamic Programming","Track max and min products due to negative numbers."
153,Find Minimum in Rotated Sorted Array,"nums=[3,4,5,1,2], output=1","nums=[4,5,6,7,0,1,2], output=0","nums=[1], output=1","nums=[2,1], output=1","nums=[3,1,2], output=1","Google, Amazon","Medium","Array, Binary Search","Use binary search to find the minimum."
154,Find Minimum in Rotated Sorted Array II,"nums=[1,3,5], output=1","nums=[2,2,2,0,1], output=0","nums=[1], output=1","nums=[2,2,2], output=2","nums=[3,3,1,3], output=1","Google, Amazon","Hard","Array, Binary Search","Handle duplicates with modified binary search."
155,Min Stack,"ops=['MinStack','push','push','push','getMin','pop','top','getMin'], args=[[],[-2],[0],[-3],[-3],[0],[-2]], output=[null,null,null,null,-3,null,0,-2]","ops=['MinStack','push','getMin'], args=[],[1], output=[null,null,1]","ops=['MinStack','push','pop','getMin'], args=[],[1], output=[null,null,null,null]","ops=['MinStack','push','push','getMin'], args=[],[1],[2], output=[null,null,null,1]","ops=['MinStack','push','top'], args=[],[3], output=[null,null,3]","Google, Amazon","Easy","Stack, Design","Use two stacks to track values and minimums."
160,Intersection of Two Linked Lists,"headA=[4,1,8,4,5], headB=[5,6,1,8,4,5], intersect=8, output=8","headA=[1,9,1,2,4], headB=[3,2,4], intersect=2, output=2","headA=[2,6,4], headB=[1,5], intersect=null, output=null","headA=[1], headB=[1], intersect=1, output=1","headA=[1,2], headB=[1,2], intersect=2, output=2","Google, Amazon","Easy","Linked List, Two Pointers","Find intersection by aligning lists with equal lengths."
162,Find Peak Element,"nums=[1,2,3,1], output=2","nums=[1,2,1,3,5,6,4], output=1 or 5","nums=[1], output=0","nums=[1,2], output=1","nums=[2,1], output=0","Google, Amazon","Medium","Array, Binary Search","Use binary search to find a peak element."
165,Compare Version Numbers,"version1='1.01', version2='1.001', output=0","version1='1.0', version2='1.0.0', output=0","version1='0.1', version2='1.1', output=-1","version1='1.0.1', version2='1', output=1","version1='7.5.2.4', version2='7.5.3', output=-1","Google, Amazon","Medium","String","Split versions and compare segments."
166,Fraction to Recurring Decimal,"numerator=1, denominator=2, output='0.5'","numerator=2, denominator=1, output='2'","numerator=2, denominator=3, output='0.(6)'","numerator=4, denominator=333, output='0.(012)'","numerator=-1, denominator=2, output='-0.5'","Google, Amazon","Medium","Math, Hash Table","Track remainders to detect repeating decimals."
167,Two Sum II - Input Array Is Sorted,"numbers=[2,7,11,15], target=9, output=[1,2]","numbers=[2,3,4], target=6, output=[1,3]","numbers=[-1,0], target=-1, output=[1,2]","numbers=[1,2,3], target=5, output=[2,3]","numbers=[0,0,3,4], target=0, output=[1,2]","Google, Amazon","Easy","Array, Two Pointers","Use two pointers on sorted array."
168,Excel Sheet Column Title,"columnNumber=1, output='A'","columnNumber=28, output='AB'","columnNumber=701, output='ZY'","columnNumber=26, output='Z'","columnNumber=27, output='AA'","Google, Amazon","Easy","Math","Convert number to base-26 representation."
169,Majority Element,"nums=[3,2,3], output=3","nums=[2,2,1,1,1,2,2], output=2","nums=[1], output=1","nums=[1,1], output=1","nums=[2,2,2,1], output=2","Google, Amazon","Easy","Array, Boyer-Moore Voting","Use Boyer-Moore voting algorithm."
171,Excel Sheet Column Number,"columnTitle='A', output=1","columnTitle='AB', output=28","columnTitle='ZY', output=701","columnTitle='Z', output=26","columnTitle='AA', output=27","Google, Amazon","Easy","Math","Convert base-26 string to number."
172,Factorial Trailing Zeroes,"n=5, output=1","n=0, output=0","n=3, output=0","n=10, output=2","n=25, output=6","Google, Amazon","Easy","Math","Count factors of 5 in factorial."
173,Binary Search Tree Iterator,"root=[7,3,15,null,null,9,20], ops=['BSTIterator','next','next','hasNext'], output=[null,3,7,true]","root=[1], ops=['BSTIterator','next','hasNext'], output=[null,1,false]","root=[3,1,4], ops=['BSTIterator','next'], output=[null,1]","root=[3,null,4], ops=['BSTIterator','next'], output=[null,3]","root=[5,3,7], ops=['BSTIterator','next','next'], output=[null,3,5]","Google, Amazon","Medium","Tree, Design","Use a stack for inorder traversal."
174,Dungeon Game,"dungeon=[[-2,-3,3],[-5,-10,1],[10,30,-5]], output=7","dungeon=[[0]], output=1","dungeon=[[100]], output=1","dungeon=[[-1]], output=2","dungeon=[[1,-2],[3,-4]], output=2","Google, Amazon","Hard","Dynamic Programming","Use DP to compute minimum health needed."
179,Largest Number,"nums=[10,2], output='210'","nums=[3,30,34,5,9], output='9534330'","nums=[1], output='1'","nums=[0,0], output='0'","nums=[23,45,67], output='674523'","Google, Amazon","Medium","String, Sorting","Sort numbers by custom comparator for largest concatenation."
187,Repeated DNA Sequences,"s='AAAAACCCCCAAAAACCCCCC', output=['AAAAACCCCC']","s='AAAAAAAAAAA', output=['AAAAAAAAAA']","s='AAAAAAAAAA', output=[]","s='AABBCCDDEE', output=[]","s='AAAAAABB', output=[]","Google, Amazon","Medium","String, Hash Table","Use a hash set to find repeated 10-length substrings."
189,Rotate Array,"nums=[1,2,3,4,5,6,7], k=3, output=[5,6,7,1,2,3,4]","nums=[-1,-100,3,99], k=2, output=[3,99,-1,-100]","nums=[1], k=0, output=[1]","nums=[1,2], k=1, output=[2,1]","nums=[1,2,3], k=4, output=[3,1,2]","Google, Amazon","Medium","Array","Use reverse operations to rotate in-place."
190,Reverse Bits,"n=43261596, output=964176192","n=4294967293, output=3221225471","n=0, output=0","n=1, output=2147483648","n=2, output=1073741824","Google, Amazon","Easy","Bit Manipulation","Reverse bits using bitwise operations."
191,Number of 1 Bits,"n=11, output=3","n=128, output=1","n=4294967295, output=32","n=0, output=0","n=1, output=1","Google, Amazon","Easy","Bit Manipulation","Count set bits using bitwise operations."
198,House Robber,"nums=[1,2,3,1], output=4","nums=[2,7,9,3,1], output=12","nums=[1], output=1","nums=[2,1], output=2","nums=[1,2], output=2","Google, Amazon","Medium","Dynamic Programming","Use DP to maximize loot without adjacent houses."
199,Binary Tree Right Side View,"root=[1,2,3,null,5,null,4], output=[1,3,4]","root=[1,null,3], output=[1,3]","root=[1], output=[1]","root=[1,2], output=[1,2]","root=[1,null,2,null,3], output=[1,2,3]","Google, Amazon","Medium","Tree, BFS, DFS","Use BFS or DFS to collect rightmost nodes per level."
200,Number of Islands,"grid=[['1','1','0','0','0'],['1','1','0','0','0'],['0','0','1','0','0'],['0','0','0','1','1']], output=3","grid=[['1']], output=1","grid=[['0']], output=0","grid=[['1','0'],['0','1']], output=2","grid=[['1','1'],['1','1']], output=1","Google, Amazon, Microsoft","Medium","DFS, BFS, Union Find","Count connected components of ‘1’s using DFS or BFS."